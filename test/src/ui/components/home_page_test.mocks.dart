// Mocks generated by Mockito 5.4.6 from annotations
// in nubank_mobile_test/test/src/ui/components/home_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nubank_mobile_test/src/data/repositories/alias_repository.dart'
    as _i2;
import 'package:nubank_mobile_test/src/ui/home/controllers/home_controller.dart'
    as _i4;
import 'package:nubank_mobile_test/src/ui/home/states/home_state.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAliasRepository_0 extends _i1.SmartFake
    implements _i2.AliasRepository {
  _FakeAliasRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHomeState_1 extends _i1.SmartFake implements _i3.HomeState {
  _FakeHomeState_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HomeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeController extends _i1.Mock implements _i4.HomeController {
  MockHomeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AliasRepository get aliasRepository =>
      (super.noSuchMethod(
            Invocation.getter(#aliasRepository),
            returnValue: _FakeAliasRepository_0(
              this,
              Invocation.getter(#aliasRepository),
            ),
          )
          as _i2.AliasRepository);

  @override
  _i3.HomeState get value =>
      (super.noSuchMethod(
            Invocation.getter(#value),
            returnValue: _FakeHomeState_1(this, Invocation.getter(#value)),
          )
          as _i3.HomeState);

  @override
  set value(_i3.HomeState? newValue) => super.noSuchMethod(
    Invocation.setter(#value, newValue),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> createAlias(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#createAlias, [url]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
